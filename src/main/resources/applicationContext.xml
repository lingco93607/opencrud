<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/data/jpa 
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  ">
	<!-- 启动spring的注解功能 -->
	<context:annotation-config />
	<!--激活spring的自动扫描功能 -->
	<context:component-scan base-package="com.z4.zhazha.forum" />
<!-- 	<tx:annotation-driven/> -->

	<import resource="classpath:rabbitmq.xml"/>

	<!-- 定义实体管理器工厂 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" /> 
		 <property name="persistenceUnitName" value="zhazha-forum"/>
		 <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		 <property name="packagesToScan" value="com.z4.zhazha.forum.pojo" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 指定数据库属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties, classpath:rabbitmq.properties"/>
    <!-- alibaba druiddatasource config -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    
	    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${db.driverClass}" />
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${db.jdbcUrl}" />
	    <property name="username" value="${db.username}" />
	    <property name="password" value="${db.password}" />
	      
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" />
	    <property name="maxActive" value="20" />
	 
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	 
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	 
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	  
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	 
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 ;如果用Oracle，则把poolPreparedStatements配置为true，
	    mysql可以配置为false-->
	    <property name="poolPreparedStatements" value="false" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	 
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="stat" />
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="104857600" />
	     <property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 启用 annotation事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置Spring Data JPA扫描目录 -->
	<!-- 自己订制自己的Repository，还可以在自己的Repository里面添加自己使用的公共方法,
	             当然更灵活的是自己写一个实现类，来实现自己需要的方法 ,做如下配置可以定义xxxRepositoryImpl,jpa可以扫描到 -->
	<jpa:repositories base-package="com.z4.zhazha.forum.dao"  
	     repository-impl-postfix="Impl"
         entity-manager-factory-ref="entityManagerFactory"
         transaction-manager-ref="transactionManager" />


</beans>